{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/crawler.service.ts","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.scss","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.scss","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.scss","webpack:///./src/app/home/home.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <app-header></app-header>\\n    <router-outlet></router-outlet>\\n    <app-footer></app-footer>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Web Crawler and Analytics';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { HomeComponent } from './home/home.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule, ReactiveFormsModule, HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class CrawlerService {\n  userUrl: string = environment.apiBaseUrl;\n  constructor(private httpClient: HttpClient) { }\n\n  crawl(url: any): Observable<any> {\n    return this.httpClient.post(this.userUrl.concat('crawler'), url);\n  }\n\n  showResults(url: any): Observable<any> {\n    return this.httpClient.get(this.userUrl.concat('crawler').concat('/result?url=').concat(url));\n  }\n}\n","module.exports = \"<footer class=\\\"page-footer teal lighten-2\\\">\\n    <div class=\\\"footer-copyright\\\">\\n        <div class=\\\"container\\\">\\n            Â© 2018 Copyright Text\\n            <a class=\\\"grey-text text-lighten-4 right\\\" href=\\\"https://github.com/ahmadimt\\\" target=\\\"blank\\\">Git</a>\\n        </div>\\n    </div>\\n</footer>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<nav>\\n  <div class=\\\"nav-wrapper teal lighten-2\\\">\\n    <a href=\\\"#\\\" class=\\\"brand-logo\\\">Java Crawler</a>\\n  </div>\\n</nav>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"row\\\" style=\\\"margin-top: 20px\\\">\\n    <form class=\\\"col s12\\\" [formGroup]=\\\"urlForm\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"input-field col s6\\\">\\n                <input id=\\\"icon_prefix\\\" type=\\\"text\\\" class=\\\"validate\\\" formControlName=\\\"url\\\" required>\\n                <label for=\\\"icon_prefix\\\">Please enter a valid url</label>\\n                <div *ngIf=\\\"urlForm.controls['url'].hasError('required')\\\" class=\\\"error-msg\\\">\\n                    Url is required.\\n                </div>\\n                <div *ngIf=\\\"urlForm.controls['url'].hasError('pattern')\\\" class=\\\"error-msg\\\">\\n                    Url is invalid.\\n                </div>\\n            </div>\\n            <div class=\\\"input-field col s6\\\">\\n                <div class=\\\"input-field col s3\\\">\\n                    <button type=\\\"submit\\\" (click)=\\\"crawl()\\\" [disabled]=\\\"urlForm.invalid\\\" class=\\\"btn btn-success save-button\\\">Crawl</button>\\n                </div>\\n                <div class=\\\"input-field col s6\\\">\\n                    <button type=\\\"submit\\\" (click)=\\\"showResults()\\\" [disabled]=\\\"urlForm.invalid\\\" class=\\\"btn btn-success save-button\\\">Show Results</button>\\n                </div>\\n            </div>\\n        </div>\\n    </form>\\n</div>\\n\\n<div class=\\\"row\\\" *ngIf=\\\"result\\\">\\n    <h5>Internal</h5>\\n    <table class=\\\"responsive-table\\\">\\n        <thead>\\n            <tr>\\n                <td>Url</td>\\n                <td>Protocol</td>\\n                <td>Reachable</td>\\n                <td>Status Code</td>\\n                <td>message</td>\\n                <td>Redirect</td>\\n            </tr>\\n        </thead>\\n        <tr *ngFor=\\\"let detail of result.links.internal.details\\\">\\n            <td>{{detail.info.url}}</td>\\n            <td>{{detail.info.protocol}}</td>\\n            <td>{{detail.info.reachable}}</td>\\n            <td>{{detail.info.redirection_details.statusCode}}</td>\\n            <td>{{detail.info.redirection_details.message}}</td>\\n            <td>{{detail.info.redirection_details.redirect}}</td>\\n        </tr>\\n    </table>\\n    <h5>External</h5>\\n    <table class=\\\"responsive-table\\\">\\n        <thead>\\n            <tr>\\n                <td>Url</td>\\n                <td>Protocol</td>\\n                <td>Reachable</td>\\n                <td>Status Code</td>\\n                <td>message</td>\\n                <td>redirect</td>\\n            </tr>\\n        </thead>\\n        <tr *ngFor=\\\"let detail of result.links.external.details\\\">\\n            <td>{{detail.info.url}}</td>\\n            <td>{{detail.info.protocol}}</td>\\n            <td>{{detail.info.reachable}}</td>\\n            <td>{{detail.info.redirection_details.statusCode}}</td>\\n            <td>{{detail.info.redirection_details.message}}</td>\\n            <td>{{detail.info.redirection_details.redirect}}</td>\\n        </tr>\\n    </table>\\n</div>\"","module.exports = \".save-button:disabled {\\n  background-color: gray !important;\\n  color: white !important; }\\n\\n.error-msg {\\n  color: red;\\n  float: right; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { CrawlerService } from '../crawler.service';\nimport * as M from 'materialize-css';\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  urlForm: FormGroup;\n  data: any;\n  error: any;\n  result: any;\n  urlRegx = '(https?://)?([\\\\da-z.-]+)\\\\.([a-z.]{2,6})[/\\\\w .-]*/?';\n  constructor(private crawlerService: CrawlerService) { }\n\n  ngOnInit() {\n    this.urlForm = new FormGroup({\n      url: new FormControl('', Validators.compose([Validators.pattern(this.urlRegx), Validators.required]))\n    });\n  }\n\n  crawl() {\n    const url = this.urlForm.get('url').value;\n    this.crawlerService.crawl(url).subscribe(\n      data => this.data = data,\n      err => this.error = err,\n      () => {\n        console.log(this.data);\n        if (this.data.error !== null && this.data.error !== undefined) {\n          M.toast({ html: this.data.error, classes: 'red' });\n        } else if (this.data.message !== null && this.data.message !== undefined) {\n          M.toast({ html: this.data.message, classes: 'green' });\n        }\n      });\n  }\n\n  showResults() {\n    const url = this.urlForm.get('url').value;\n    this.crawlerService.showResults(url).subscribe(\n      data => this.result = data,\n      err => this.error = err,\n      () => {\n        console.log(this.result);\n      });\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiBaseUrl: 'http://localhost:8080/api/v1/',\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}